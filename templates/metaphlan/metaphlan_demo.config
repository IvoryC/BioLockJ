#BioModule biolockj.module.diy.GenMod AS Download
#BioModule biolockj.module.biobakery.metaphlan.MetaPhlAn_DB
#BioModule biolockj.module.biobakery.metaphlan.MetaPhlAn3
#BioModule biolockj.module.biobakery.metaphlan.Merge_MetaPhlAn_Tables
#BioModule biolockj.module.diy.ForEachLoop AS SplitTable
#BioModule biolockj.module.diy.ForEachFile AS Hclust2

DATA=${BLJ}/templates/metaphlan/tutorial_input/fasta

input.dirPaths=${DATA}
pipeline.inputTypes=fasta

Download.scriptPath=./tutorial_input/download_input.sh
Download.param=${DATA}

metaphlan.dbIndex=mpa_v30_CHOCOPhlAn_201901
metaphlan.params=--input_type fasta

metaphlan.bowtie2db=./reference_db

# Notice that this module is set to use the same docker image as the MetaPhlAn module.
# This info can be found in the documentation of the MetaPhlAn module.
SplitTable.scriptPath=./split_table.sh
SplitTable.loopBy=species, genus, class
SplitTable.imageOwner=biobakery
SplitTable.imageName=metaphlan
SplitTable.imageTag=3.0.7

Hclust2.scriptPath=./run_hclust2.sh
Hclust2.imageOwner=biobakery
Hclust2.imageName=hclust2
Hclust2.imageTag=1.0.0_3d589ab

script.numWorkers=1

#exe.merge_metaphlan_tables.py=

# to make the docker container work..
#MetaPhlAn_DB.dbIndex=v30_CHOCOPhlAn_201901
#metaphlan.consistentModules = N

# for metaphlan2
# dockerExe.metaphlan=/usr/local/bin/metaphlan2.py
